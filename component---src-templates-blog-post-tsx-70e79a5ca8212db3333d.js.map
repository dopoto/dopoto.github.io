{"version":3,"file":"component---src-templates-blog-post-tsx-70e79a5ca8212db3333d.js","mappings":"2HAGA,MAAMA,EACFC,EAAAA,cAAA,OACIC,UAAU,eACVC,IAAI,0BACJC,MAAO,GACPC,OAAQ,GACRC,IAAI,oBA4CZ,IAxCeC,IAQR,IARS,aACZC,EAAY,eACZC,EAAc,SACdC,GAKHH,EACG,MACMI,EACFV,EAAAA,cAAA,OAAKC,UAAU,oCACVM,EAAeP,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAIL,GAAeR,GAAcA,EACvDC,EAAAA,cAAA,WACIA,EAAAA,cAAA,OAAKC,UAAU,wBACVM,EACGP,EAAAA,cAACW,EAAAA,KAAI,CAACC,GAAIL,GAAc,UAExBP,EAAAA,cAAAA,EAAAA,SAAA,KAAE,WAGVA,EAAAA,cAAA,OAAKC,UAAU,kBAAkBO,KAK7C,OACIR,EAAAA,cAAA,OACIC,UAAU,yEACV,qBApBW,GAsBXD,EAAAA,cAAA,UAAQC,UAAU,gIACbS,GAELV,EAAAA,cAAA,YAAOS,GACPT,EAAAA,cAAA,eACE,C,qDCed,UA5DiBM,IAAmB,IAAlB,KAAEO,GAAWP,EAC3B,MAAMQ,EAAOD,EAAKE,eAClB,OACIf,EAAAA,cAACgB,EAAAA,EAAM,CAACR,eAAe,yBAAyBD,aAAa,KACzDP,EAAAA,cAAA,WAASiB,WAAS,EAACC,SAAS,6BACxBlB,EAAAA,cAAA,OAAKC,UAAU,sBACXD,EAAAA,cAAA,aAAQc,EAAKK,YAAYC,MACzBpB,EAAAA,cAAA,OAAKC,UAAU,0DACVa,EAAKK,YAAYE,OAEtBrB,EAAAA,cAAA,OACIC,UAAU,aACVqB,wBAAyB,CAAEC,OAAQT,EAAKU,UAI/C,C","sources":["webpack://dopoto/./src/components/layout.tsx","webpack://dopoto/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst img = (\n    <img\n        className=\"rounded-full\"\n        src=\"/images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        alt=\"Profile picture\"\n    />\n);\n\nconst Layout = ({\n    headerLinkTo,\n    secondaryTitle,\n    children,\n}: {\n    headerLinkTo?: string;\n    secondaryTitle: string;\n    children: React.ReactNode;\n}) => {\n    const isRootPath = false; //location.pathname === rootPath\n    const header = (\n        <div className=\"flex flex-row items-center gap-3\">\n            {headerLinkTo ? <Link to={headerLinkTo}>{img}</Link> : img}\n            <div>\n                <div className=\"text-3xl font-black \">\n                    {headerLinkTo ? (\n                        <Link to={headerLinkTo}>dopoto</Link>\n                    ) : (\n                        <>dopoto</>\n                    )}\n                </div>\n                <div className=\"main-secondary\">{secondaryTitle}</div>\n            </div>\n        </div>\n    );\n\n    return (\n        <div\n            className=\"mx-[auto] my-[0] max-w-[var(--maxWidth-wrapper)] px-[var(--spacing-5)]\"\n            data-is-root-path={isRootPath}\n        >\n            <header className=\"font-[var(--font-heading)] tracking-[-.025em] leading-[var(--lineHeight-tight)] mb-[var(--spacing-6)] mt-[var(--spacing-12)]\">\n                {header}\n            </header>\n            <main>{children}</main>\n            <footer></footer>\n        </div>\n    );\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { graphql } from \"gatsby\";\nimport Layout from \"../components/layout\";\n\nconst BlogPost = ({ data }: any) => {\n    const post = data.markdownRemark;\n    return (\n        <Layout secondaryTitle=\"A web developer's blog\" headerLinkTo=\"/\">\n            <article itemScope itemType=\"http://schema.org/Article\">\n                <div className=\"max-w-4xl mx-auto \">                   \n                    <small>{post.frontmatter.date}</small>\n                    <div className=\"text-[#005b99] font-bold text-2xl tracking-tight pt-0 \">\n                        {post.frontmatter.title}\n                    </div>\n                    <div\n                        className=\"pt-8 pb-12\"\n                        dangerouslySetInnerHTML={{ __html: post.html }}\n                    />\n                </div>\n            </article>\n        </Layout>\n    );\n};\n\nexport const pageQuery = graphql`\n    query BlogPostBySlug(\n        $id: String!\n        $previousPostId: String\n        $nextPostId: String\n    ) {\n        site {\n            siteMetadata {\n                title\n            }\n        }\n        markdownRemark(id: { eq: $id }) {\n            id\n            excerpt(pruneLength: 160)\n            html\n            frontmatter {\n                title\n                date(formatString: \"MMMM DD, YYYY\")\n                description\n            }\n        }\n        previous: markdownRemark(id: { eq: $previousPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n        next: markdownRemark(id: { eq: $nextPostId }) {\n            fields {\n                slug\n            }\n            frontmatter {\n                title\n            }\n        }\n    }\n`;\n\nexport default BlogPost;\n"],"names":["img","React","className","src","width","height","alt","_ref","headerLinkTo","secondaryTitle","children","header","Link","to","data","post","markdownRemark","Layout","itemScope","itemType","frontmatter","date","title","dangerouslySetInnerHTML","__html","html"],"sourceRoot":""}