{"version":3,"file":"component---src-pages-index-tsx-0ce3bb453966bda77b94.js","mappings":"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","sources":["webpack://dopoto/./src/components/layout.tsx","webpack://dopoto/./src/components/seo.tsx","webpack://dopoto/./src/pages/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link } from \"gatsby\";\n\nconst img = (\n    <img\n        className=\"rounded-full\"\n        src=\"/images/profile-pic.jpg\"\n        width={50}\n        height={50}\n        alt=\"Profile picture\"\n    />\n);\n\nconst Layout = ({\n    headerLinkTo,\n    secondaryTitle,\n    children,\n}: {\n    headerLinkTo?: string;\n    secondaryTitle: string;\n    children: React.ReactNode;\n}) => {\n    const isRootPath = false; //location.pathname === rootPath\n    const header = (\n        <div className=\"flex flex-row items-center gap-3\">\n            {headerLinkTo ? <Link to={headerLinkTo}>{img}</Link> : img}\n            <div>\n                <div className=\"text-3xl font-black \">\n                    {headerLinkTo ? (\n                        <Link to={headerLinkTo}>dopoto</Link>\n                    ) : (\n                        <>dopoto</>\n                    )}\n                </div>\n                <div className=\"main-secondary\">{secondaryTitle}</div>\n            </div>\n        </div>\n    );\n\n    return (\n        <div\n            className=\"mx-[auto] my-[0] max-w-[var(--maxWidth-wrapper)] px-[var(--spacing-5)]\"\n            data-is-root-path={isRootPath}\n        >\n            <header className=\"font-[var(--font-heading)] tracking-[-.025em] leading-[var(--lineHeight-tight)] mb-[var(--spacing-6)] mt-[var(--spacing-12)]\">\n                {header}\n            </header>\n            <main>{children}</main>\n            <footer></footer>\n        </div>\n    );\n};\n\nexport default Layout;\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Seo = ({ description, title, children }: any) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.social?.twitter || ``}\n      />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import Seo from \"../components/seo\";\nimport Layout from \"../components/layout\"\nimport { graphql, Link } from \"gatsby\";\nimport React from \"react\";\n\nconst IndexPage = ({ data }: any) => {\n    return (\n        <Layout secondaryTitle=\"A web developer's blog\" headerLinkTo=\"/\">\n            <ol style={{ listStyle: `none` }}>\n                {data.allMarkdownRemark.edges.map(({ node }: any) => (\n                    <li key={node.fields.slug}>\n                        <article\n                            className=\"mb-[var(--spacing-8)] mt-[var(--spacing-8)]\"\n                            itemScope\n                            itemType=\"http://schema.org/Article\"\n                        >\n                            <header>\n                                <small>{node?.frontmatter?.date}</small>\n                                <h2 className=\"text-[#005b99] font-bold text-2xl tracking-tight\">\n                                    <Link to={node.fields.slug} itemProp=\"url\">\n                                        <span itemProp=\"headline\">\n                                            {node.frontmatter?.title ||\n                                                node.fields.slug}\n                                        </span>\n                                    </Link>\n                                </h2>\n                            </header>\n                            <section>\n                                <p\n                                    className=\"mb-[var(--spacing-0)]\"\n                                    dangerouslySetInnerHTML={{\n                                        __html:\n                                            node?.frontmatter?.description ||\n                                            node?.excerpt,\n                                    }}\n                                    itemProp=\"description\"\n                                />\n                            </section>\n                        </article>\n                    </li>\n                ))}\n            </ol>\n        </Layout>\n    );\n};\n\nexport const query = graphql`\n    {\n        allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n            edges {\n                node {\n                    excerpt\n                    frontmatter {\n                        date(formatString: \"MMMM DD, YYYY\")\n                        title\n                        description\n                    }\n                    fields {\n                        slug\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport default IndexPage;\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"dopoto - a web developer's blog\" />\n"],"names":["img","React","className","src","width","height","alt","_ref","headerLinkTo","secondaryTitle","children","header","Link","to","_site$siteMetadata","_site$siteMetadata2","_site$siteMetadata2$s","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","social","twitter","data","Layout","style","listStyle","allMarkdownRemark","edges","map","_ref2","_node$frontmatter","_node$frontmatter2","_node$frontmatter3","node","key","fields","slug","itemScope","itemType","frontmatter","date","itemProp","dangerouslySetInnerHTML","__html","excerpt","Head","Seo"],"sourceRoot":""}